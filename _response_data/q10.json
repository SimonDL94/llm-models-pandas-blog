{
    "prompt": "can you give me fully working python code to do the following with the Python pandas library:can you give me fully working python code to do the following with the Python pandas library: Implement a function to detect and handle duplicate rows in the DataFrame based on selected columns.",
    "output": "Certainly! Here's a fully working Python code that implements a function to detect and handle duplicate rows in a DataFrame based on selected columns using the pandas library:\n\n```python\nimport pandas as pd\n\ndef handle_duplicates(df, columns, keep='first'):\n    \"\"\"\n    Detect and handle duplicate rows in the DataFrame based on selected columns.\n    \n    Parameters:\n    - df: The input DataFrame.\n    - columns: A list of column names to consider for duplicate detection.\n    - keep: Specifies which duplicates to keep. Can be 'first', 'last', or False.\n            'first' keeps the first occurrence, 'last' keeps the last occurrence,\n            and False removes all duplicates.\n    \n    Returns:\n    - The DataFrame with duplicates handled according to the specified keep strategy.\n    \"\"\"\n    duplicates = df.duplicated(subset=columns, keep=keep)\n    if keep == 'first':\n        df = df[~duplicates]\n    elif keep == 'last':\n        df = df[~duplicates]\n    else:\n        df = df.drop_duplicates(subset=columns, keep=False)\n    \n    return df\n\n# Example usage\ndata = {\n    'Name': ['John', 'Alice', 'Bob', 'John', 'Alice', 'Charlie'],\n    'Age': [25, 30, 35, 25, 30, 40],\n    'City': ['New York', 'London', 'Paris', 'New York', 'London', 'Berlin']\n}\n\ndf = pd.DataFrame(data)\nprint(\"Original DataFrame:\")\nprint(df)\n\ncolumns_to_check = ['Name', 'Age']\ndf_deduped = handle_duplicates(df, columns_to_check, keep='first')\nprint(\"\\nDuplicate rows removed (keep first occurrence):\")\nprint(df_deduped)\n\ndf_deduped = handle_duplicates(df, columns_to_check, keep='last')\nprint(\"\\nDuplicate rows removed (keep last occurrence):\")\nprint(df_deduped)\n\ndf_deduped = handle_duplicates(df, columns_to_check, keep=False)\nprint(\"\\nAll duplicate rows removed:\")\nprint(df_deduped)\n```\n\nOutput:\n```\nOriginal DataFrame:\n     Name  Age      City\n0    John   25  New York\n1   Alice   30    London\n2     Bob   35     Paris\n3    John   25  New York\n4   Alice   30    London\n5  Charlie  40    Berlin\n\nDuplicate rows removed (keep first occurrence):\n     Name  Age      City\n0    John   25  New York\n1   Alice   30    London\n2     Bob   35     Paris\n5  Charlie  40    Berlin\n\nDuplicate rows removed (keep last occurrence):\n     Name  Age      City\n2     Bob   35     Paris\n3    John   25  New York\n4   Alice   30    London\n5  Charlie  40    Berlin\n\nAll duplicate rows removed:\n     Name  Age    City\n2     Bob   35   Paris\n5  Charlie  40  Berlin\n```\n\nIn this code, the `handle_duplicates` function takes a DataFrame (`df`), a list of column names (`columns`) to consider for duplicate detection, and a `keep` parameter that specifies which duplicates to keep.\n\nThe function uses the `duplicated` method of pandas to identify duplicate rows based on the specified columns. The `keep` parameter determines which duplicates to keep: 'first' keeps the first occurrence, 'last' keeps the last occurrence, and False removes all duplicates.\n\nThe function then filters the DataFrame based on the duplicate mask and returns the resulting DataFrame with duplicates handled according to the specified `keep` strategy.\n\nIn the example usage, we create a sample DataFrame with duplicate rows and demonstrate how to use the `handle_duplicates` function with different `keep` strategies to remove duplicates based on the 'Name' and 'Age' columns."
}